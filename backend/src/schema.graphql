# import * from './generated/prisma.graphql'

type Mutation {
    # createMessage(text: String!): Message!
    createMessage(text: String!, conversation: ID!): Message!
    createConversation(users: [ID!]!, messages: [ID]!): Conversation
    signup(
        email: String!
        password: String!
        firstname: String!
        lastname: String!
        username: String!
    ): User!
    signin(email: String!, password: String!): User!
}

type Query {
    users(where: UserWhereInput, orderBy: UserOrderByInput): [User]!
    messages(where: MessageWhereInput, orderBy: MessageOrderByInput): [Message]!
    # conversation(where: ConversationWhereUniqueInput!): Conversation
    # conversations(where: ConversationWhereInput): [Conversation]!
    conversations: [Conversation]
    conversation(id: ID!): Conversation
    me: User
    # users: [User]!
    # messages: [Message]!
}

type Subscription {
    # newMessage(where: MessageSubscriptionWhereInput): Message
    newMessage(conversationId: ID!): MessageSubscriptionPayload
    # newMessage(conversation: ID!): Message
}

type User {
    id: ID!
    email: String!
    firstname: String!
    lastname: String!
    username: String!
    conversations: [Conversation!]!
    messages: [Message!]!
}

type Conversation {
    id: ID!
    users: [User!]!
    messages: [Message!]!
}

type Message {
    id: ID!
    text: String!
    user: User!
    conversation: Conversation!
}
